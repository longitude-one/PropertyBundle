name: Bundle test

on:
  push: ~
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        php: [ '8.1', '8.2' ]
        symfony: ['6.2']

    name: With PHP ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
    steps:
      - uses: actions/checkout@master

      - name: Validate composer.json
        run: composer validate --strict

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Echo PHP version
        run: php -v

      - name: Install symfony/flex
        run: composer global config --no-plugins allow-plugins.symfony/flex true && composer global require --no-progress --no-scripts --no-plugins symfony/flex

      - name: Validate composer.json with ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        run: composer validate --strict

      - name: Cache Composer packages with ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}

      - name: Composer update with PHP ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        run: SYMFONY_REQUIRE=${{ matrix.symfony }} composer update --prefer-dist --no-progress

      - name: Run test suite on PHP ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        run: vendor/bin/phpunit tests/Unit

      - name: Run test suite on PHP ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        run: vendor/bin/phpunit tests/Functional

      # I try to create a new application with the bundle installed
      - name: Directory creation
        run: mkdir tmp
      - name: New application creation
        working-directory: tmp/
        run: composer create-project symfony/skeleton:"6.2.*" app --no-interaction
      - name: Setup configuration
        working-directory: tmp/app/
        run: composer config minimum-stability dev
      - name: Setup local bundle
        working-directory: tmp/app
        run: "composer config repositories.local '{\"type\": \"path\", \"url\": \"../../\", \"options\": {\"symlink\": true}}'"
      - name: Bundle installation
        working-directory: tmp/app
        run: composer require easycorp/easyadmin-bundle longitude-one/property-bundle symfony/twig-bundle --no-interaction
      - name: Copy some custom file (entity, repository), the .env file, and simple config files into the new application
        working-directory: tmp/app
        run: cp -R ../../tests/Tools/app-skeleton/src . && cp -R ../../tests/Tools/app-skeleton/.env . && cp -R ../../tests/Tools/app-skeleton/config .
      - name: Symfony binary client installation
        run: wget https://get.symfony.com/cli/installer -O - | bash && mv ~/.symfony5/bin/symfony /usr/local/bin/symfony
      - name: Starting symfony server
        working-directory: tmp/app
        run: symfony server:start --daemon
      - name: Clearing cache and assets installation
        working-directory: tmp/app
        run: symfony console cache:clear && symfony console assets:install
      - name: Schema creation
        working-directory: tmp/app
        run: symfony console doctrine:schema:create
      - name: Starting integration test
        run: vendor/bin/phpunit tests/Application
      # TODO run integration test

      - name: install PHPCSFIXER
        run: composer require --working-dir=tools/php-cs-fixer friendsofphp/php-cs-fixer

      # On PHP 8.2, we run the test suite with PHP_CS_FIXER_IGNORE_ENV as long as the php-cs-fixer dependency is not full compatible with PHP 8.2
      - name: PHP-CS-FIXER test on /src with ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        if: ${{ matrix.php == '8.2' }}
        run: PHP_CS_FIXER_IGNORE_ENV=1 tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --config=tools/php-cs-fixer/.php-cs-fixer.php

      - name: PHP-CS-FIXER test on /tests with ${{ matrix.php }} and Symfony ${{ matrix.symfony }}
        if: ${{ matrix.php == '8.1' }}
        run: tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --config=tools/php-cs-fixer/.php-cs-fixer.php

      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@master
        with:
          level: 9
          configuration: tools/php-stan/php-stan.neon
          memory_limit: 256M
